# Use server mode
all.role server

cms.vnid {{ vnid_config }}

# Use XrdSsi plugin
xrootd.fslib -2 libXrdSsi.so default
ssi.svclib libxrdsvc.so
oss.statlib -2 -arevents libXrdSsi.so

# Force disable asyncronous access
# because of XrdSsi
xrootd.async off

# Access to the files at the file system as specified by the "default" option
# in the statement "xrootd.fslib" above.
ssi.fspath {{ results_dirname }}

ssi.trace all debug

########################################
# Shared directives (manager and server)
########################################

# Path to write logging and other information
all.adminpath /var/run/xrootd

# Do not change. This specifies valid virtual paths that can be accessed.
# "nolock" directive prevents write-locking and is important for qserv
# qserv is hardcoded for these paths.
all.export / nolock
all.export {{ results_dirname }}

# Specify that no significant free space is required on servers
# Indeed current configuration doesn't expect to be dynamically
# written to, but export the space in R/W mode
cms.space 1k 2k

ssi.loglib libxrdlog.so

# Optional: Prevent dns resolution in logs.
# This may speed up request processing.
xrd.network nodnr

# This causes hostname resolution to occur at run-time not configuration time
# This is required by k8s
# Andy H. still have to modify the local IP-to-Name cache to account
# for dynamic DNS (it doesn't now). Unfortunately, it's a non-ABI compatible
# change so it will go into Release 5 branch not git master. The caching
# shouldn't really be a problem but if causes you grief simply turn it off by
# also specifying "xrd.network cache 0". Once Andy H. fixes the cache it will work
# correctly with a dynamic DNS with no side-effects (though it's unlikely any of
# them are observed as it is).
xrd.network dyndns
xrd.network cache 0

all.manager {{cmsd_manager_name}}:2131

# - cmsd redirector runs on port 2131
# - cmsd server does not open server socket
#   but only client connection to cmsd redirector
# - xrootd default port is 1094
xrd.port 1094

# Uncomment the following line for detailed xrootd debugging
# xrootd.trace all debug

# Enforce the default limits for the number of threads created/managed by XROOTD.
# Formally, these defaults are supposed to be enforced by the implementation
# as stated in: https://xrootd.web.cern.ch/doc/dev57/xrd_config.htm#_Toc171719950
# In reality, no limit is set. The problem was reported to the XROOT developers
# in: https://github.com/xrootd/xrootd/issues/2468
xrd.sched mint 8 maxt 2048 avlt 512 idle 780
